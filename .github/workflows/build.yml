# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          16    # Minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '16' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
        - name: GitHub Upload Release Artifacts
  # You may pin to the exact commit or the version.
  # uses: Roang-zero1/github-upload-release-artifacts-action@f0677c0645db8d52dddaee4e83ce2c150f95e8e1
  uses: Roang-zero1/github-upload-release-artifacts-action@v2.1.0
  with:
    # Allows to pass an already created tag, forces update_existing to true.
    created_tag: # optional, default is 
